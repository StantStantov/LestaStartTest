services:
  app:
    hostname: LestaStartApp
    image: stant/lesta-start-app:test
    build:
      context: ../../
      dockerfile: build/app.dockerfile
      target: test
    networks:
      - lesta-start-net
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ${PWD}:/src
      - lesta-start-app-artifacts:${DOCUMENTS_PATH}
      - ${GOCACHE}:/root/.cache/go-build
      - ${GOMODCACHE}:/go/pkg/mod
    env_file:
      - ./.env
    environment:
      SERVER_PORT: ${SERVER_PORT?}
      DATABASE_URL: ${DATABASE_URL?}
      DOCUMENTS_PATH: ${DOCUMENTS_PATH?}
  
  db:
    hostname: ${PS_HOST}
    image: stant/lesta-start-db:test
    build: 
      context: ../..
      dockerfile: build/db.dockerfile
      target: runner
      secrets:
        - "ps_user"
        - "ps_password"
        - "ps_db"
    command: -c fsync=off
    networks:
      - lesta-start-net
    volumes:
      - lesta-start-db-artifacts:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h ${PS_HOST} -U ${PS_USER} -d ${PS_DB}"]
      interval: 5s
      timeout: 1s
      retries: 10

networks:
  lesta-start-net:
    driver: bridge

volumes:
  lesta-start-app-artifacts:
  lesta-start-db-artifacts:

secrets:
  ps_user:
    environment: "PS_USER"
  ps_password:
    environment: "PS_PASSWORD"
  ps_db:
    environment: "PS_DB"
